apply plugin: 'java'
apply plugin: 'base'

buildscript {
  repositories {
    all { ArtifactRepository repo ->
      if(repo instanceof MavenArtifactRepository){
        def url = repo.url.toString()
        if (
        (url.startsWith('http://repo1.maven.org/maven2'))||
                (url.startsWith('https://repo1.maven.org/maven2'))||
                (url.startsWith('http://jcenter.bintray.com'))||
                (url.startsWith('https://jcenter.bintray.com'))||
                (url.startsWith('http://maven.google.com'))||
                (url.startsWith('https://maven.google.com'))
        ){
          remove repo
        }
      }
    }
    maven { url 'https://maven.aliyun.com/repository/central'
      allowInsecureProtocol = true
    }
    maven { url 'https://maven.aliyun.com/repository/public'
      allowInsecureProtocol = true
    }
    maven { url 'https://maven.aliyun.com/repository/jcenter'
      allowInsecureProtocol = true
    }
    maven { url 'https://maven.aliyun.com/repository/google'
      allowInsecureProtocol = true
    }
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin'
      allowInsecureProtocol = true
    }
  }
}

apply plugin: 'idea'

configurations {
  provided
}

sourceSets {
  main {
    compileClasspath += configurations.provided
    runtimeClasspath += configurations.provided
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

dependencies {
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}